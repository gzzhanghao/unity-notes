import{_ as s,c as n,o as a,a as l}from"./app.04c73a4e.js";const A=JSON.parse('{"title":"Delegate","description":"","frontmatter":{},"headers":[{"level":2,"title":"Declare","slug":"declare","link":"#declare","children":[]},{"level":2,"title":"Assigning","slug":"assigning","link":"#assigning","children":[]},{"level":2,"title":"Invoke","slug":"invoke","link":"#invoke","children":[]}],"relativePath":"c-sharp/delegate.md","lastUpdated":1664804710000}'),p={name:"c-sharp/delegate.md"},e=l(`<h1 id="delegate" tabindex="-1">Delegate <a class="header-anchor" href="#delegate" aria-hidden="true">#</a></h1><blockquote><p>See: <a href="https://www.youtube.com/watch?v=3ZfwqWl-YI0" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=3ZfwqWl-YI0</a></p></blockquote><p>\u76F8\u5F53\u4E8E C \u4E2D\u7684\u51FD\u6570\u6307\u9488\uFF0C\u7528\u4E8E\u5B9E\u73B0\u4E8B\u4EF6\u673A\u5236\u3002</p><h2 id="declare" tabindex="-1">Declare <a class="header-anchor" href="#declare" aria-hidden="true">#</a></h2><p><strong>Declare with <code>delegate</code> keyword</strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#676E95;">// () =&gt; void;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">delegate</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestDelegate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestDelegate</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testDelegateFunction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// (int) =&gt; bool;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">delegate</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestBoolDelegate</span><span style="color:#89DDFF;">(int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestBoolDelegate</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testBoolDelegateFunction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>Declare with <code>Action</code></strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// () =&gt; void;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Action</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testAction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// (int, float) =&gt; void;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Action</span><span style="color:#89DDFF;">&lt;int,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">float&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testIntFloatAction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>Declare with <code>Func</code></strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// () =&gt; bool;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Func</span><span style="color:#89DDFF;">&lt;bool&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testFunc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// (int) =&gt; bool;</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Func</span><span style="color:#89DDFF;">&lt;int,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">testIntBoolFunc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="assigning" tabindex="-1">Assigning <a class="header-anchor" href="#assigning" aria-hidden="true">#</a></h2><p><strong>Assinging delegate</strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">delegate</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// noop</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p><strong>Assigning lambda</strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// shorthand lambda</span></span>
<span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>Assigning properties / methods / other variables</strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MyDelegateFunction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>Push back / remove</strong></p><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> MyDelegateFunction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">delegateFunction </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> MyDelegateFunction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="invoke" tabindex="-1">Invoke <a class="header-anchor" href="#invoke" aria-hidden="true">#</a></h2><div class="language-csharp"><button class="copy"></button><span class="lang">csharp</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testBoolDelegateFunction</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">result1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> testBoolDelegateFunction</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">Invoke</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,21),o=[e];function t(c,r,D,F,i,y){return a(),n("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
